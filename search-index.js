var searchIndex = {};
searchIndex['disque'] = {"items":[[0,"","disque","disque-rs is a rust implementation of a Disque client library.\nIt uses redis-rs to handle the connection and low level protocol.",null,null],[3,"AddJobBuilder","","Helper to add a new job",null,null],[3,"QueueQueryBuilder","","Helper to get a list of queues",null,null],[3,"JobQueryBuilder","","Helper to get a list of jobs",null,null],[3,"Disque","","",null,null],[11,"open","","Opens a new connection to a Disque server.",0,{"inputs":[{"name":"disque"},{"name":"t"}],"output":{"name":"redisresult"}}],[11,"hello","","The hello command returns information about the disque cluster.",0,{"inputs":[{"name":"disque"}],"output":{"name":"redisresult"}}],[11,"addjob","","Adds a job to a queue.",0,null],[11,"getjob_count","","Gets up to `count` jobs from certain `queues`.",0,null],[11,"getjob_count_withcounters","","",0,null],[11,"getjob","","Gets a single job from any of the specified `queues`.",0,null],[11,"getjob_withcounters","","Gets a single job from any of the specified `queues` with its nack and\nadditional deliveries count.",0,null],[11,"ackjobs","","Acknowledge jobs.",0,null],[11,"ackjob","","Acknowledge a job.",0,null],[11,"fastackjobs","","Fast acknowledge jobs.",0,null],[11,"fastackjob","","Fast acknowledge a job.",0,null],[11,"working","","Tell Disque that a job is still processed.",0,null],[11,"nackjobs","","Tells Disque to put back the jobs in the queue ASAP. Should be used when\nthe worker was not able to process a message and wants the message to\nbe put back into the queue in order to be processed again.",0,null],[11,"nackjob","","Tells Disque to put back a job in the queue ASAP.",0,null],[11,"info","","Information about the server",0,{"inputs":[{"name":"disque"}],"output":{"name":"redisresult"}}],[11,"qlen","","Size of the queue",0,null],[11,"qpeek","","Gets jobs from `queue_name` up to the absolute number of `count`.\nIf count is negative, it will be from newest to oldest.",0,null],[11,"enqueue","","Add jobs to queues",0,null],[11,"dequeue","","Remove jobs from queue",0,null],[11,"deljobs","","Completely delete jobs from a single node.",0,null],[11,"deljob","","Completely delete a job from a single node.",0,null],[11,"show","","Returns full information about a job, like its current state and data.",0,null],[11,"qscan","","Iterator to run all queues that fulfil a criteria.\nThe iterator will batch into segments of approximate `count` size.",0,{"inputs":[{"name":"disque"},{"name":"u64"},{"name":"u64"},{"name":"bool"},{"name":"option"},{"name":"option"},{"name":"option"}],"output":{"name":"redisresult"}}],[11,"jscan_id","","Iterator for all job ids that fulfil a criteria.\nThe iterator will batch into segments of approximate `count` size.",0,null],[11,"jscan_all","","Iterator for all jobs that fulfil a criteria.\nThe iterator will batch into segments of approximate `count` size.",0,null],[11,"new","","Creates a new builder for `queue_name`.\nTimeout is specified in milliseconds.",1,null],[11,"queue_name","","Changes the queue name where the job will be added.",1,null],[11,"job","","Changes the job body.",1,null],[11,"timeout","","Changes the timeout. It must be specified in milliseconds.",1,{"inputs":[{"name":"addjobbuilder"},{"name":"u64"}],"output":{"name":"self"}}],[11,"replicate","","The number of nodes the job should be replicated to.",1,{"inputs":[{"name":"addjobbuilder"},{"name":"usize"}],"output":{"name":"self"}}],[11,"delay","","The number of seconds that should elapse before the job is queued.",1,{"inputs":[{"name":"addjobbuilder"},{"name":"u64"}],"output":{"name":"self"}}],[11,"retry","","Period after which, if no ACK is received, the job is put again\ninto the queue for delivery",1,{"inputs":[{"name":"addjobbuilder"},{"name":"u64"}],"output":{"name":"self"}}],[11,"ttl","","The max job life in seconds. After this time, the job is deleted even\nif it was not successfully delivered.",1,{"inputs":[{"name":"addjobbuilder"},{"name":"u64"}],"output":{"name":"self"}}],[11,"maxlen","","If there are already count messages queued for the specified queue\nname, the message is refused and an error reported to the client.",1,{"inputs":[{"name":"addjobbuilder"},{"name":"usize"}],"output":{"name":"self"}}],[11,"async","","If true, asks the server to let the command return ASAP and replicate\nthe job to other nodes in the background.\nOtherwise, the job is put into the queue only when the client gets a\npositive reply.",1,{"inputs":[{"name":"addjobbuilder"},{"name":"bool"}],"output":{"name":"self"}}],[11,"run","","Executes the addjob command.",1,{"inputs":[{"name":"addjobbuilder"},{"name":"disque"}],"output":{"name":"redisresult"}}],[11,"new","","Creates a new builder.",2,{"inputs":[{"name":"queuequerybuilder"}],"output":{"name":"queuequerybuilder"}}],[11,"count","","A hint about how much work to do per iteration.",2,{"inputs":[{"name":"queuequerybuilder"},{"name":"u64"}],"output":{"name":"self"}}],[11,"busyloop","","If true, blocks and returns all the queues in a busy loop.",2,{"inputs":[{"name":"queuequerybuilder"},{"name":"bool"}],"output":{"name":"self"}}],[11,"minlen","","Only return queues with at least `minlen` jobs.",2,{"inputs":[{"name":"queuequerybuilder"},{"name":"u64"}],"output":{"name":"self"}}],[11,"maxlen","","Only return queues with at most `maxlen` jobs.",2,{"inputs":[{"name":"queuequerybuilder"},{"name":"u64"}],"output":{"name":"self"}}],[11,"importrate","","Only return queues with a job import rate (from other nodes) greater\nthan or equal to  `importrate`.",2,{"inputs":[{"name":"queuequerybuilder"},{"name":"u64"}],"output":{"name":"self"}}],[11,"iter","","Gets the queue iterator.",2,{"inputs":[{"name":"queuequerybuilder"},{"name":"disque"}],"output":{"name":"redisresult"}}],[11,"new","","",3,{"inputs":[{"name":"jobquerybuilder"}],"output":{"name":"jobquerybuilder"}}],[11,"count","","A hint about how much work to do per iteration.",3,{"inputs":[{"name":"jobquerybuilder"},{"name":"u64"}],"output":{"name":"self"}}],[11,"busyloop","","Block and return all the elements in a busy loop.",3,{"inputs":[{"name":"jobquerybuilder"},{"name":"bool"}],"output":{"name":"self"}}],[11,"queue","","Only get jobs in the specified queue.",3,null],[11,"state","","Only return jobs in specified states. Can be called multiple times to\nget jobs in any of those states.",3,{"inputs":[{"name":"jobquerybuilder"},{"name":"str"}],"output":{"name":"self"}}],[11,"iter_ids","","Gets a job ids iterator.",3,{"inputs":[{"name":"jobquerybuilder"},{"name":"disque"}],"output":{"name":"redisresult"}}],[11,"iter_all","","Gets a job information iterator.",3,{"inputs":[{"name":"jobquerybuilder"},{"name":"disque"}],"output":{"name":"redisresult"}}]],"paths":[[3,"Disque"],[3,"AddJobBuilder"],[3,"QueueQueryBuilder"],[3,"JobQueryBuilder"]]};
initSearch(searchIndex);
